


trait MyTrait(T) = {
  proc foo(_:T, _:str): void
  proc foo(_:T, _:f32): void
  proc foo(_:T, _:f64): void
}

trait MyMultiTrait(T,U) = {
  proc bar(_:T, _:U): i32
}

proc bar[M : MyTrait](a: M): void = {
  foo(a, "abc":str)
  foo(a, 234:f32)
  foo(a, 567:f64)
}

# TODO multitrait isn't even figured out yet
type MyStruct = struct {
  a: i32
  b: str
}

proc foo(self:MyStruct, arg:str): void = {
  printf("foo str")
}
proc foo(self:MyStruct, arg:f32): void = {
  printf("foo f32")
}
proc foo(self:MyStruct, arg:f64): void = {
  printf("foo f64")
}

proc main(): void = {
  var myStruct: MyStruct
  bar(myStruct)
}

# foo(myStruct)
# bing(13:i32)
