


trait MyTrait(T) {
  proc foo(_:T, _:str): void
  proc foo(_:T, _:f32): void
  proc foo(_:T, _:f64): void
}

trait MyMultiTrait(T,U) {
  proc bar(_:T, _:U): i32
}

proc bar[T : MyTrait](a:  T): void = {
  foo(a, "abc")
  foo(a, 234:f32)
}

# TODO multitrait isn't even figured out yet

type MyStruct = struct {
  a: i32
  b: str
}

proc foo(self:MyStruct, arg:str): void = {}
proc foo(self:MyStruct, arg:f32): void = {}
proc foo(self:MyStruct, arg:f64): void = {}

proc main(): void = {
  var myStruct: MyStruct
  # bar(myStruct)
}

# foo(myStruct)
# bing(13:i32)
