* DONE just use keywords
* DONE implement type checking on 'return'
* DONE implement ~context~ type and parameter for ~TypeCheck~ functions
* DONE provide proper error messages or error instead of panic
* DONE negative literals
* DONE error reporting instead of compiler crashing
* DONE add error type to represent invalid / non-typeable ast
* DONE test infrastructure compiler error reporting
* DONE add field values to struct literals
* DONE testing framework to test the compiler
* DONE allow conversion between enum/int/string
* DONE enum set type
* DONE consistent Typ/Type member name
* TODO reserve macro like functions like printf to be non-overloadable
* TODO define order to generate type definitions in
* TODO generic arguments (important for builtin array access)
* TODO not all ast nodes have correct ~source~ values, for example ~[]~, code needs to deal with it
* TODO array access
* TODO distinguish between the type and the expression that defines it
* TODO display parsing errors es normal error messages
* TODO call by reference
* TODO mutable flag in type
* TODO multiple return values??
* TODO full coverage of all error messages
* TODO test operator precedence when many `:` are in use`
* TODO default int, default float
* DONE add ability for type assertions
* TODO performance tracking over time to know when the compiler gets slower and which commits cause compilation slowdowns.
* TODO maybe return TypeFloat like in Nim for integer division?
* TODO pointer
* TODO better distinguish go type information vs golem type information better
* TODO vm for compile time code execution
* TODO restrict operator precedence to common knowledge cases (+-*/) require explicit braces everywhere else.
* DONE static overloading
* TODO C++ interop
* DONE automatic narrowing of literals when type is known from outside.
* TODO make `registerBuiltinX` a method of scope.
* TODO compiler passes for some transformations (e.g. moving literals to constants)
* TODO statistics about compiler bootstrapping time, lines of code, test time, test lines of code
* TODO full set of types
** TODO vector/matrix/simd types
** TODO string

#+begin_src c


typedef struct {uint32_t len; char data[];} string;

const string strLit0 = {.len=12,.data="Hallo Welt!\n"};
const string strLit56 = {.len=12,.data="x: %d y: %d\n"};
const string strLit113 = {.len=19,.data="(1+(2*3)+((8)/4))+1"};
const string strLit177 = {.len=20,.data="max paren depth: %d\n"};
const string strLit243 = {.len=15,.data="default Values\n"};

#+end_src

** TODO enum
** TODO set
** DONE int float in all sizes
** DONE array
** DONE struct
** DONE literals
* DONE documentation structure
* TODO dotExpr should be strictly limited to two elements
